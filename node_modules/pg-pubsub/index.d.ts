export = PGPubsub;
declare class PGPubsub extends EventEmitter {
    
// @ts-ignore
constructor(conString?: string | import("pg").ClientConfig | undefined, { log, retryLimit }?: {
        log?: typeof console.log;
        retryLimit?: number;
    });
    
// @ts-ignore
protected _getDB(noNewConnections?: boolean | undefined): Promise<import('pg').Client>;
    addChannel(channel: string, callback?: PGPubsubCallback | undefined): Promise<void>;
    removeChannel(channel: string, callback?: PGPubsubCallback | undefined): this;
    publish(channel: string, data?: any): Promise<void>;
    close(): Promise<void>;
    reset(): void;
    #private;
}
declare namespace PGPubsub {
    export { PGPubsubCallback };
}
import EventEmitter = require("events");
type PGPubsubCallback = (payload: any) => void;
//# sourceMappingURL=index.d.ts.map